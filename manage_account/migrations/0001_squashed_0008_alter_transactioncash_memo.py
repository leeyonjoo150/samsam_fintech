# Generated by Django 5.2.5 on 2025-09-17 00:58

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


CATEGORY_CHOICES = [
    ('식비', '식비'),
    ('교통/차량', '교통/차량'),
    ('문화생활', '문화생활'),
    ('마트/편의점', '마트/편의점'),
    ('패션/미용', '패션/미용'),
    ('생활용품', '생활용품'),
    ('주거/통신', '주거/통신'),
    ('건강', '건강'),
    ('교육', '교육'),
    ('경조사/회비', '경조사/회비'),
    ('부모님', '부모님'),
    ('기타', '기타'),
]

def populate_categories(apps, schema_editor):
    """
    Populates the AccountBookCategory table with the choices.
    """
    AccountBookCategory = apps.get_model('manage_account', 'AccountBookCategory')
    for category_value, _ in CATEGORY_CHOICES:
        AccountBookCategory.objects.get_or_create(cat_type=category_value)

def populate_income_categories(apps, schema_editor):
    """
    Populates the AccountBookCategory table with income categories.
    """
    AccountBookCategory = apps.get_model('manage_account', 'AccountBookCategory')
    
    income_categories = ["월급", "부수입", "용돈", "상여", "금융소득", "기타"]
    
    for category_name in income_categories:
        AccountBookCategory.objects.get_or_create(
            cat_kind='income',
            cat_type=category_name
        )

def populate_expense_categories(apps, schema_editor):
    """
    Populates the AccountBookCategory table with expense categories.
    """
    AccountBookCategory = apps.get_model('manage_account', 'AccountBookCategory')
    
    expense_categories = [
        "식비", "교통/차량", "문화생활", "마트/편의점", "패션/미용", 
        "생활용품", "주거/통신", "건강", "교육", "경조사/회비", "부모님", "기타"
    ]

    for category_name in expense_categories:
        AccountBookCategory.objects.get_or_create(
            cat_kind='expense',
            cat_type=category_name
        )


class Migration(migrations.Migration):

    replaces = [('manage_account', '0001_initial'), ('manage_account', '0002_populate_categories'), ('manage_account', '0003_accountbookcategory_cat_kind_and_more'), ('manage_account', '0004_populate_income_categories'), ('manage_account', '0005_populate_expense_categories'), ('manage_account', '0006_transactioncash_memo_transactioncash_photo'), ('manage_account', '0003_alter_account_created_at_and_more'), ('manage_account', '0007_merge_20250917_0923'), ('manage_account', '0008_alter_transactioncash_memo')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountBookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cat_type', models.CharField(choices=[('식비', '식비'), ('교통/차량', '교통/차량'), ('문화생활', '문화생활'), ('마트/편의점', '마트/편의점'), ('패션/미용', '패션/미용'), ('생활용품', '생활용품'), ('주거/통신', '주거/통신'), ('건강', '건강'), ('교육', '교육'), ('경조사/회비', '경조사/회비'), ('부모님', '부모님'), ('기타', '기타')], max_length=20, verbose_name='카테고리종류')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
            ],
            options={
                'verbose_name': '가계부카테고리',
                'verbose_name_plural': '가계부카테고리 목록',
                'ordering': ['cat_type'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acc_bank', models.CharField(choices=[('국민', '국민은행'), ('신한', '신한은행'), ('우리', '우리은행'), ('하나', '하나은행'), ('농협', '농협은행'), ('기업', '기업은행')], max_length=5, verbose_name='은행')),
                ('acc_num', models.CharField(max_length=50, unique=True, verbose_name='계좌번호')),
                ('acc_pw', models.CharField(max_length=4, verbose_name='계좌비밀번호')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('acc_user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL, verbose_name='소유자')),
            ],
            options={
                'verbose_name': '일반계좌',
                'verbose_name_plural': '일반계좌 목록',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('st_company', models.CharField(max_length=20, verbose_name='증권사')),
                ('st_acc_num', models.CharField(max_length=50, unique=True, verbose_name='계좌번호')),
                ('st_acc_pw', models.CharField(max_length=4, verbose_name='주식계좌비밀번호')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('st_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_accounts', to=settings.AUTH_USER_MODEL, verbose_name='소유자')),
            ],
            options={
                'verbose_name': '주식용계좌',
                'verbose_name_plural': '주식용계좌 목록',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StockContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker_code', models.CharField(max_length=10, verbose_name='주식식별번호')),
                ('pur_amount', models.IntegerField(verbose_name='매수금액')),
                ('share', models.IntegerField(verbose_name='주식개수')),
                ('currency', models.CharField(choices=[('원화', '원화'), ('달러', '달러')], default='원화', max_length=10, verbose_name='통화')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('st_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_contents', to='manage_account.stockaccount', verbose_name='주식용계좌')),
            ],
            options={
                'verbose_name': '주식내역',
                'verbose_name_plural': '주식내역 목록',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('txn_side', models.CharField(choices=[('입금', '입금'), ('출금', '출금')], max_length=10, verbose_name='거래종류')),
                ('txn_amount', models.IntegerField(verbose_name='금액')),
                ('txn_balance', models.IntegerField(verbose_name='잔액')),
                ('txn_cont', models.CharField(blank=True, max_length=300, null=True, verbose_name='내용')),
                ('txn_date', models.DateTimeField(auto_now_add=True, verbose_name='거래날짜')),
                ('cpart_acc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_transactions', to='manage_account.account', verbose_name='상대계좌아이디')),
                ('my_acc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_transactions', to='manage_account.account', verbose_name='내계좌아이디')),
                ('txn_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manage_account.accountbookcategory', verbose_name='가계부카테고리')),
            ],
            options={
                'verbose_name': '계좌거래내역',
                'verbose_name_plural': '계좌거래내역 목록',
                'ordering': ['-txn_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionCash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cash_side', models.CharField(choices=[('수입', '수입'), ('지출', '지출')], max_length=10, verbose_name='방식')),
                ('cash_amount', models.IntegerField(verbose_name='금액')),
                ('use_date', models.DateTimeField(auto_now_add=True, verbose_name='사용날짜')),
                ('cash_balance', models.IntegerField(verbose_name='잔액')),
                ('cash_cont', models.CharField(blank=True, max_length=300, null=True, verbose_name='내용')),
                ('cash_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manage_account.accountbookcategory', verbose_name='가계부카테고리')),
                ('cash_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_transactions', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '현금거래내역',
                'verbose_name_plural': '현금거래내역 목록',
                'ordering': ['-use_date'],
            },
        ),
        migrations.RunPython(
            code=populate_categories,
        ),
        migrations.AddField(
            model_name='accountbookcategory',
            name='cat_kind',
            field=models.CharField(choices=[('income', '수입'), ('expense', '지출')], default='expense', max_length=10, verbose_name='카테고리 구분'),
        ),
        migrations.AlterField(
            model_name='accountbookcategory',
            name='cat_type',
            field=models.CharField(choices=[('식비', '식비'), ('교통/차량', '교통/차량'), ('문화생활', '문화생활'), ('마트/편의점', '마트/편의점'), ('패션/미용', '패션/미용'), ('생활용품', '생활용품'), ('주거/통신', '주거/통신'), ('건강', '건강'), ('교육', '교육'), ('경조사/회비', '경조사/회비'), ('부모님', '부모님'), ('기타', '기타'), ('월급', '월급'), ('부수입', '부수입'), ('용돈', '용돈'), ('상여', '상여'), ('금융소득', '금융소득')], max_length=20, verbose_name='카테고리종류'),
        ),
        migrations.RunPython(
            code=populate_income_categories,
        ),
        migrations.RunPython(
            code=populate_expense_categories,
        ),
        migrations.AddField(
            model_name='transactioncash',
            name='photo',
            field=models.ImageField(blank=True, null=True, upload_to='photos/%Y/%m/%d/', verbose_name='사진'),
        ),
        migrations.AlterField(
            model_name='account',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일'),
        ),
        migrations.AlterField(
            model_name='accountbookcategory',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일'),
        ),
        migrations.AlterField(
            model_name='stockaccount',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일'),
        ),
        migrations.AlterField(
            model_name='stockcontent',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='생성일'),
        ),
        migrations.AlterField(
            model_name='transactionaccount',
            name='txn_date',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='거래날짜'),
        ),
        migrations.AlterField(
            model_name='transactioncash',
            name='use_date',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='사용날짜'),
        ),
        migrations.AddField(
            model_name='transactioncash',
            name='memo',
            field=models.CharField(blank=True, max_length=300, null=True, verbose_name='메모'),
        ),
    ]